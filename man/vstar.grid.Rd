% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vstar.grid.R
\name{vstar.grid}
\alias{vstar.grid}
\title{Estimate VSTAR using grid search}
\usage{
vstar.grid(
  dataset,
  m = 2,
  g.function = "L",
  g.derivative = get.G.derivative(g.function),
  gamma.limits = c(0.1, 100),
  points = 200,
  trim = 0.15,
  gap = 0.1,
  cores = 1
)
}
\arguments{
\item{dataset}{an object of S3-classes \code{vstar.data} or \code{vstar}.}

\item{m}{a number of regimes. It should be not less than 2.}

\item{g.function}{a transition function to be used
\itemize{
\item "L": Logistic transition function
\deqn{\frac{1}{1 + \exp (-\gamma (s_t - c))}}
\item "E": Exponential transition function
\deqn{1 - \exp(-\gamma (s_t - c)^2)}
\item fn: Custom function receiving transition variable, gammas and threshold
values in exactly this order.
}}

\item{g.derivative}{a vector of transition functions derivatives:
the first is by \eqn{\gamma}, and the second is by \eqn{c}.
If you use "L" or "E" as \code{g.function} then you shouldn't bother with this
parameter.
But if you provide a custom derivative, then you must provide
custom derivatives as well.
Although they are not needed by the estimation itself,
they're stored for future testing.
If you're not going to make diagnostic testing just pass NULL.}

\item{gamma.limits}{a vector of lower and upper bounds of \eqn{\gamma}.}

\item{points}{a number of points in grid sequences.}

\item{trim}{a number (if greater than 1) or a share of the transition
variable values (in ascending order) to be ignored during grid construction.
Affects only the \eqn{c} part of the grid.}

\item{gap}{a number (if greater than 1) or a share of minimum distance
between two values of \eqn{c} in grid.
Used only if \eqn{m > 2}.}

\item{cores}{a number of cores to be used.
If greater than 1 then a grid search will be done in parallel.
The number of cores has the upper bound of processor cores number minus 1.}
}
\value{
An object of S3-class \code{vstar} containing
\itemize{
\item everything from the input object \code{dataset}. To the sublist \code{dim} added is
the number of regimes \eqn{m}.
\item a sublist \code{estimates} containing the result of the loop over the grid.
\item a sublist \code{func} containing a transition function and its derivatives.
NB: these are function bodies!
\item a matrix of coefficients.
\item a matrix of standard deviations of coefficients.
\item a matrix of t-statistics of coefficients.
\item a vector of estimated values of \eqn{\gamma}.
\item a vector of estimated values of \eqn{c}.
\item a matrix of fitted values.
\item a matrix of residuals.
\item covariance matrix of residuals.
\item a value of \code{g.function} parameter.
}
}
\description{
This function estimates the parameters of VSTAR model using
the provided \code{vstar.data} object with the data prepared.

The parameters \eqn{\gamma} and \eqn{c} are estimated by grid search.
If \code{cores} is set to the value bigger than 1 then parallelization with
\code{SNOW} backend is used.
}
\details{
As stated by (Teräsvirta and Yang, 2014), estimating VSTAR directly by NLS
is quite hard due to the big number of parameters.
They proposed to estimate the model by grid search.
The main idea is that with \eqn{\gamma} and \eqn{c} fixed the system
becomes linear, and it can be estimated by OLS.
So one can go through a grid of possible combinations of \eqn{\gamma}
and \eqn{c} values searching for the one with the minimum value of SSR.

It should be noted that the number of steps increases substantially as
the number of regimes \eqn{m} grows. Let's set the number of steps along one
directon of the grid to 100 and denote it as \eqn{p}.
If we have only two regimes then the number of steps will be
\deqn{p^2 = 10,000}

But if we have three regimes, then the number of steps will be
\deqn{p^2 \times \frac{p(p+1)}{2} = \frac{1}{2}(p^4 + p^3) = 50,500,000}
The second factor in the first expression has this form due to the
restriction \eqn{c_1 < c_2}, and actually it's an area of a "dicrete"
triangle.

If we have four regimes, then the number of steps will be
\deqn{p^3 \times \frac{1}{6}p(p+1)(p+2) = 171,700,000,000}

It's quite easy to show, that for an arbitrary number of regimes the number
of step will be
\eqn{p^{m-1} \times \frac{1}{m!} p(p+1)(p+2)\dots(p+m-1)}

So if you want to estimate a model with a big number of regimes you should be
sure you know what you do!
}
\references{
T. Teräsvirta and Y. Yang,
“Specification, estimation and evaluation of
vector smooth transition autoregressive models with applications,”
Department of Economics and Business Economics, Aarhus University,
2014–08, Mar. 2014.
}
